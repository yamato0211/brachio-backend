// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: websocket/payload/playing.proto

package payload

import (
	messages "github.com/yamato0211/brachio-backend/internal/handler/schema/messages"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionType int32

const (
	ActionType_UNKNOWN           ActionType = 0
	ActionType_ATTACK_MONSTER    ActionType = 1
	ActionType_SUMMON_MONSTER    ActionType = 2
	ActionType_EVOLUTION_MONSTER ActionType = 3
	ActionType_TAKE_SUPPORT      ActionType = 4
	ActionType_TAKE_GOODS        ActionType = 5
	ActionType_RETREAT           ActionType = 6
	ActionType_SUPPLY_ENERGY     ActionType = 7
	ActionType_SURRENDER         ActionType = 8
	ActionType_ABILITY           ActionType = 9
	ActionType_DRAW              ActionType = 10
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "ATTACK_MONSTER",
		2:  "SUMMON_MONSTER",
		3:  "EVOLUTION_MONSTER",
		4:  "TAKE_SUPPORT",
		5:  "TAKE_GOODS",
		6:  "RETREAT",
		7:  "SUPPLY_ENERGY",
		8:  "SURRENDER",
		9:  "ABILITY",
		10: "DRAW",
	}
	ActionType_value = map[string]int32{
		"UNKNOWN":           0,
		"ATTACK_MONSTER":    1,
		"SUMMON_MONSTER":    2,
		"EVOLUTION_MONSTER": 3,
		"TAKE_SUPPORT":      4,
		"TAKE_GOODS":        5,
		"RETREAT":           6,
		"SUPPLY_ENERGY":     7,
		"SURRENDER":         8,
		"ABILITY":           9,
		"DRAW":              10,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_payload_playing_proto_enumTypes[0].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_websocket_payload_playing_proto_enumTypes[0]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{0}
}

type AttackMonsterPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 攻撃者のモンスター
	AttackerPosition int32 `protobuf:"varint,1,opt,name=attacker_position,json=attackerPosition,proto3" json:"attacker_position,omitempty"`
	// 技のインデックス
	Skill          int32   `protobuf:"varint,2,opt,name=skill,proto3" json:"skill,omitempty"`
	TargetsDamages []int32 `protobuf:"varint,3,rep,packed,name=targetsDamages,proto3" json:"targetsDamages,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AttackMonsterPayload) Reset() {
	*x = AttackMonsterPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttackMonsterPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttackMonsterPayload) ProtoMessage() {}

func (x *AttackMonsterPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttackMonsterPayload.ProtoReflect.Descriptor instead.
func (*AttackMonsterPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{0}
}

func (x *AttackMonsterPayload) GetAttackerPosition() int32 {
	if x != nil {
		return x.AttackerPosition
	}
	return 0
}

func (x *AttackMonsterPayload) GetSkill() int32 {
	if x != nil {
		return x.Skill
	}
	return 0
}

func (x *AttackMonsterPayload) GetTargetsDamages() []int32 {
	if x != nil {
		return x.TargetsDamages
	}
	return nil
}

type SummonMonsterPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 召喚するモンスター
	Card *messages.Card `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	// 召喚する場所
	Position      int32 `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummonMonsterPayload) Reset() {
	*x = SummonMonsterPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummonMonsterPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummonMonsterPayload) ProtoMessage() {}

func (x *SummonMonsterPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummonMonsterPayload.ProtoReflect.Descriptor instead.
func (*SummonMonsterPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{1}
}

func (x *SummonMonsterPayload) GetCard() *messages.Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *SummonMonsterPayload) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type EvolutionMonsterPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 進化するモンスター
	Card *messages.Card `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	// 進化する場所
	Position      int32 `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvolutionMonsterPayload) Reset() {
	*x = EvolutionMonsterPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvolutionMonsterPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvolutionMonsterPayload) ProtoMessage() {}

func (x *EvolutionMonsterPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvolutionMonsterPayload.ProtoReflect.Descriptor instead.
func (*EvolutionMonsterPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{2}
}

func (x *EvolutionMonsterPayload) GetCard() *messages.Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *EvolutionMonsterPayload) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type TakeSupportPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// サポートカード
	Card *messages.Card `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	// サポートの対象のカードのID
	Positions     []int32 `protobuf:"varint,2,rep,packed,name=positions,proto3" json:"positions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TakeSupportPayload) Reset() {
	*x = TakeSupportPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TakeSupportPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeSupportPayload) ProtoMessage() {}

func (x *TakeSupportPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeSupportPayload.ProtoReflect.Descriptor instead.
func (*TakeSupportPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{3}
}

func (x *TakeSupportPayload) GetCard() *messages.Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *TakeSupportPayload) GetPositions() []int32 {
	if x != nil {
		return x.Positions
	}
	return nil
}

type TakeGoodsPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// アイテム
	Card *messages.Card `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	// グッズ効果の対象のカード
	Positions     []int32 `protobuf:"varint,2,rep,packed,name=positions,proto3" json:"positions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TakeGoodsPayload) Reset() {
	*x = TakeGoodsPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TakeGoodsPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeGoodsPayload) ProtoMessage() {}

func (x *TakeGoodsPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeGoodsPayload.ProtoReflect.Descriptor instead.
func (*TakeGoodsPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{4}
}

func (x *TakeGoodsPayload) GetCard() *messages.Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *TakeGoodsPayload) GetPositions() []int32 {
	if x != nil {
		return x.Positions
	}
	return nil
}

type RetreatPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 退却するモンスター
	Card *messages.Card `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	// 逃げる場所
	Position      int32 `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetreatPayload) Reset() {
	*x = RetreatPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetreatPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetreatPayload) ProtoMessage() {}

func (x *RetreatPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetreatPayload.ProtoReflect.Descriptor instead.
func (*RetreatPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{5}
}

func (x *RetreatPayload) GetCard() *messages.Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *RetreatPayload) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type SupplyEnergys struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Energies      []messages.Element     `protobuf:"varint,1,rep,packed,name=energies,proto3,enum=messages.common.Element" json:"energies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupplyEnergys) Reset() {
	*x = SupplyEnergys{}
	mi := &file_websocket_payload_playing_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupplyEnergys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplyEnergys) ProtoMessage() {}

func (x *SupplyEnergys) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplyEnergys.ProtoReflect.Descriptor instead.
func (*SupplyEnergys) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{6}
}

func (x *SupplyEnergys) GetEnergies() []messages.Element {
	if x != nil {
		return x.Energies
	}
	return nil
}

type SupplyEnergyPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 供給するエネルギー(ポジションベース length4)
	Supplys       []*SupplyEnergys `protobuf:"bytes,1,rep,name=supplys,proto3" json:"supplys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupplyEnergyPayload) Reset() {
	*x = SupplyEnergyPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupplyEnergyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplyEnergyPayload) ProtoMessage() {}

func (x *SupplyEnergyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplyEnergyPayload.ProtoReflect.Descriptor instead.
func (*SupplyEnergyPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{7}
}

func (x *SupplyEnergyPayload) GetSupplys() []*SupplyEnergys {
	if x != nil {
		return x.Supplys
	}
	return nil
}

type SurrenderPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 降参するユーザーのID
	UserId        string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SurrenderPayload) Reset() {
	*x = SurrenderPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SurrenderPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderPayload) ProtoMessage() {}

func (x *SurrenderPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderPayload.ProtoReflect.Descriptor instead.
func (*SurrenderPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{8}
}

func (x *SurrenderPayload) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AbilityPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 発動するラムモン
	Position int32 `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	// 発動する特性
	Ability       *messages.Ability `protobuf:"bytes,2,opt,name=ability,proto3" json:"ability,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbilityPayload) Reset() {
	*x = AbilityPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbilityPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbilityPayload) ProtoMessage() {}

func (x *AbilityPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbilityPayload.ProtoReflect.Descriptor instead.
func (*AbilityPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{9}
}

func (x *AbilityPayload) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *AbilityPayload) GetAbility() *messages.Ability {
	if x != nil {
		return x.Ability
	}
	return nil
}

type DrawCardPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 山札から引くカードの枚数
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// 山札の残り枚数
	Remain        int32 `protobuf:"varint,2,opt,name=remain,proto3" json:"remain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DrawCardPayload) Reset() {
	*x = DrawCardPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrawCardPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawCardPayload) ProtoMessage() {}

func (x *DrawCardPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawCardPayload.ProtoReflect.Descriptor instead.
func (*DrawCardPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{10}
}

func (x *DrawCardPayload) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DrawCardPayload) GetRemain() int32 {
	if x != nil {
		return x.Remain
	}
	return 0
}

type DrawCardIndividualPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 山札から引くカードの枚数
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// 山札から引くカード
	Cards []*messages.Card `protobuf:"bytes,2,rep,name=cards,proto3" json:"cards,omitempty"`
	// 山札の残り枚数
	Remain        int32 `protobuf:"varint,3,opt,name=remain,proto3" json:"remain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DrawCardIndividualPayload) Reset() {
	*x = DrawCardIndividualPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrawCardIndividualPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawCardIndividualPayload) ProtoMessage() {}

func (x *DrawCardIndividualPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawCardIndividualPayload.ProtoReflect.Descriptor instead.
func (*DrawCardIndividualPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{11}
}

func (x *DrawCardIndividualPayload) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DrawCardIndividualPayload) GetCards() []*messages.Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *DrawCardIndividualPayload) GetRemain() int32 {
	if x != nil {
		return x.Remain
	}
	return 0
}

type ConfirmActionPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Actions       []*Action              `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmActionPayload) Reset() {
	*x = ConfirmActionPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmActionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmActionPayload) ProtoMessage() {}

func (x *ConfirmActionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmActionPayload.ProtoReflect.Descriptor instead.
func (*ConfirmActionPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{12}
}

func (x *ConfirmActionPayload) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type Action struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  ActionType             `protobuf:"varint,1,opt,name=type,proto3,enum=websocket.payload.playing.ActionType" json:"type,omitempty"`
	// 行動するラムモンorアイテム
	Position      *int32 `protobuf:"varint,2,opt,name=position,proto3,oneof" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_websocket_payload_playing_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{13}
}

func (x *Action) GetType() ActionType {
	if x != nil {
		return x.Type
	}
	return ActionType_UNKNOWN
}

func (x *Action) GetPosition() int32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

type CoinTossPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []bool                 `protobuf:"varint,1,rep,packed,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CoinTossPayload) Reset() {
	*x = CoinTossPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoinTossPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinTossPayload) ProtoMessage() {}

func (x *CoinTossPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinTossPayload.ProtoReflect.Descriptor instead.
func (*CoinTossPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{14}
}

func (x *CoinTossPayload) GetResults() []bool {
	if x != nil {
		return x.Results
	}
	return nil
}

type CoinTossEmptyPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Empty         *emptypb.Empty         `protobuf:"bytes,1,opt,name=empty,proto3" json:"empty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CoinTossEmptyPayload) Reset() {
	*x = CoinTossEmptyPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoinTossEmptyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinTossEmptyPayload) ProtoMessage() {}

func (x *CoinTossEmptyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinTossEmptyPayload.ProtoReflect.Descriptor instead.
func (*CoinTossEmptyPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{15}
}

func (x *CoinTossEmptyPayload) GetEmpty() *emptypb.Empty {
	if x != nil {
		return x.Empty
	}
	return nil
}

type StartGamePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Empty         *emptypb.Empty         `protobuf:"bytes,1,opt,name=empty,proto3" json:"empty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartGamePayload) Reset() {
	*x = StartGamePayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGamePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGamePayload) ProtoMessage() {}

func (x *StartGamePayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGamePayload.ProtoReflect.Descriptor instead.
func (*StartGamePayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{16}
}

func (x *StartGamePayload) GetEmpty() *emptypb.Empty {
	if x != nil {
		return x.Empty
	}
	return nil
}

type InitialPlacementCompletePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Empty         *emptypb.Empty         `protobuf:"bytes,1,opt,name=empty,proto3" json:"empty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitialPlacementCompletePayload) Reset() {
	*x = InitialPlacementCompletePayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitialPlacementCompletePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitialPlacementCompletePayload) ProtoMessage() {}

func (x *InitialPlacementCompletePayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitialPlacementCompletePayload.ProtoReflect.Descriptor instead.
func (*InitialPlacementCompletePayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{17}
}

func (x *InitialPlacementCompletePayload) GetEmpty() *emptypb.Empty {
	if x != nil {
		return x.Empty
	}
	return nil
}

type TurnStartPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ターンプレイヤーのID
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// 発動するイベントの原因となるカード
	Cards []*messages.Card `protobuf:"bytes,2,rep,name=cards,proto3" json:"cards,omitempty"`
	// イベントの原因となる特性
	Abilities     []*messages.Ability `protobuf:"bytes,3,rep,name=abilities,proto3" json:"abilities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TurnStartPayload) Reset() {
	*x = TurnStartPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TurnStartPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnStartPayload) ProtoMessage() {}

func (x *TurnStartPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TurnStartPayload.ProtoReflect.Descriptor instead.
func (*TurnStartPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{18}
}

func (x *TurnStartPayload) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TurnStartPayload) GetCards() []*messages.Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *TurnStartPayload) GetAbilities() []*messages.Ability {
	if x != nil {
		return x.Abilities
	}
	return nil
}

type TurnEndPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ターンプレイヤーのID
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// 発動するイベントの原因となるカード
	Cards []*messages.Card `protobuf:"bytes,2,rep,name=cards,proto3" json:"cards,omitempty"`
	// イベントの原因となる特性
	Abilities     []*messages.Ability `protobuf:"bytes,3,rep,name=abilities,proto3" json:"abilities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TurnEndPayload) Reset() {
	*x = TurnEndPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TurnEndPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnEndPayload) ProtoMessage() {}

func (x *TurnEndPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TurnEndPayload.ProtoReflect.Descriptor instead.
func (*TurnEndPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{19}
}

func (x *TurnEndPayload) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TurnEndPayload) GetCards() []*messages.Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *TurnEndPayload) GetAbilities() []*messages.Ability {
	if x != nil {
		return x.Abilities
	}
	return nil
}

type ConfirmEnergyResponsePayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// エネルギーを供給するモンスター
	Card *messages.Card `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	// 供給するエネルギー
	Energies      []messages.Element `protobuf:"varint,2,rep,packed,name=energies,proto3,enum=messages.common.Element" json:"energies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmEnergyResponsePayload) Reset() {
	*x = ConfirmEnergyResponsePayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmEnergyResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmEnergyResponsePayload) ProtoMessage() {}

func (x *ConfirmEnergyResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmEnergyResponsePayload.ProtoReflect.Descriptor instead.
func (*ConfirmEnergyResponsePayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{20}
}

func (x *ConfirmEnergyResponsePayload) GetCard() *messages.Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *ConfirmEnergyResponsePayload) GetEnergies() []messages.Element {
	if x != nil {
		return x.Energies
	}
	return nil
}

type ConfirmEnergyRequestPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// エネルギーを供給するモンスター
	Card *messages.Card `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	// 必要なエネルギー
	Energies      []messages.Element `protobuf:"varint,2,rep,packed,name=energies,proto3,enum=messages.common.Element" json:"energies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmEnergyRequestPayload) Reset() {
	*x = ConfirmEnergyRequestPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmEnergyRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmEnergyRequestPayload) ProtoMessage() {}

func (x *ConfirmEnergyRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmEnergyRequestPayload.ProtoReflect.Descriptor instead.
func (*ConfirmEnergyRequestPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{21}
}

func (x *ConfirmEnergyRequestPayload) GetCard() *messages.Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *ConfirmEnergyRequestPayload) GetEnergies() []messages.Element {
	if x != nil {
		return x.Energies
	}
	return nil
}

type ConfirmTargetResponsePayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 対象となるカード
	Position int32 `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	// ターゲットとなるカード
	TargetPositions []int32 `protobuf:"varint,2,rep,packed,name=target_positions,json=targetPositions,proto3" json:"target_positions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConfirmTargetResponsePayload) Reset() {
	*x = ConfirmTargetResponsePayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmTargetResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmTargetResponsePayload) ProtoMessage() {}

func (x *ConfirmTargetResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmTargetResponsePayload.ProtoReflect.Descriptor instead.
func (*ConfirmTargetResponsePayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{22}
}

func (x *ConfirmTargetResponsePayload) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *ConfirmTargetResponsePayload) GetTargetPositions() []int32 {
	if x != nil {
		return x.TargetPositions
	}
	return nil
}

type ConfirmTargetRequestPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 対象となるカード
	Position int32 `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	// 必要なターゲット数
	Count         int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmTargetRequestPayload) Reset() {
	*x = ConfirmTargetRequestPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmTargetRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmTargetRequestPayload) ProtoMessage() {}

func (x *ConfirmTargetRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmTargetRequestPayload.ProtoReflect.Descriptor instead.
func (*ConfirmTargetRequestPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{23}
}

func (x *ConfirmTargetRequestPayload) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *ConfirmTargetRequestPayload) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type NextEnergyPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 次のエネルギー
	Energy        messages.Element `protobuf:"varint,1,opt,name=energy,proto3,enum=messages.common.Element" json:"energy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextEnergyPayload) Reset() {
	*x = NextEnergyPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextEnergyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextEnergyPayload) ProtoMessage() {}

func (x *NextEnergyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextEnergyPayload.ProtoReflect.Descriptor instead.
func (*NextEnergyPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{24}
}

func (x *NextEnergyPayload) GetEnergy() messages.Element {
	if x != nil {
		return x.Energy
	}
	return messages.Element(0)
}

type DrawEffectPayloadToRecipient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Effects       []*messages.Effect     `protobuf:"bytes,1,rep,name=effects,proto3" json:"effects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DrawEffectPayloadToRecipient) Reset() {
	*x = DrawEffectPayloadToRecipient{}
	mi := &file_websocket_payload_playing_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrawEffectPayloadToRecipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawEffectPayloadToRecipient) ProtoMessage() {}

func (x *DrawEffectPayloadToRecipient) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawEffectPayloadToRecipient.ProtoReflect.Descriptor instead.
func (*DrawEffectPayloadToRecipient) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{25}
}

func (x *DrawEffectPayloadToRecipient) GetEffects() []*messages.Effect {
	if x != nil {
		return x.Effects
	}
	return nil
}

type DrawEffectPayloadToActor struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Effects       []*messages.EffectWithSecret `protobuf:"bytes,1,rep,name=effects,proto3" json:"effects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DrawEffectPayloadToActor) Reset() {
	*x = DrawEffectPayloadToActor{}
	mi := &file_websocket_payload_playing_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrawEffectPayloadToActor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawEffectPayloadToActor) ProtoMessage() {}

func (x *DrawEffectPayloadToActor) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawEffectPayloadToActor.ProtoReflect.Descriptor instead.
func (*DrawEffectPayloadToActor) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{26}
}

func (x *DrawEffectPayloadToActor) GetEffects() []*messages.EffectWithSecret {
	if x != nil {
		return x.Effects
	}
	return nil
}

type SelectBattlePositionPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      int32                  `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectBattlePositionPayload) Reset() {
	*x = SelectBattlePositionPayload{}
	mi := &file_websocket_payload_playing_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectBattlePositionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectBattlePositionPayload) ProtoMessage() {}

func (x *SelectBattlePositionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_payload_playing_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectBattlePositionPayload.ProtoReflect.Descriptor instead.
func (*SelectBattlePositionPayload) Descriptor() ([]byte, []int) {
	return file_websocket_payload_playing_proto_rawDescGZIP(), []int{27}
}

func (x *SelectBattlePositionPayload) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

var File_websocket_payload_playing_proto protoreflect.FileDescriptor

var file_websocket_payload_playing_proto_rawDesc = string([]byte{
	0x0a, 0x1f, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x19, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x1a, 0x13, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x4d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2b, 0x0a,
	0x11, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x44, 0x61, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x5b, 0x0a, 0x14, 0x53, 0x75, 0x6d, 0x6d,
	0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x27, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x17, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x27, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x12, 0x54, 0x61, 0x6b, 0x65, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04,
	0x63, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x59, 0x0a, 0x10, 0x54, 0x61, 0x6b, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x55, 0x0a,
	0x0e, 0x52, 0x65, 0x74, 0x72, 0x65, 0x61, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x27, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x45, 0x0a, 0x0d, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x45, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x69, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x13, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x42, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x2e,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x73, 0x52, 0x07, 0x73,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x22, 0x2a, 0x0a, 0x10, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x61, 0x0a, 0x0e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x0a, 0x07, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x07, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x3f, 0x0a, 0x0f, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72,
	0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x74, 0x0a, 0x19, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x53, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e,
	0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x71, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x77, 0x65, 0x62, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x0f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x73, 0x73,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x22, 0x44, 0x0a, 0x14, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x73, 0x73, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x40, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x4f, 0x0a, 0x1f, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x54,
	0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x09, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0e,
	0x54, 0x75, 0x72, 0x6e, 0x45, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x09, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x1c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63,
	0x61, 0x72, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x69, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x1b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72,
	0x64, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x65,
	0x6e, 0x65, 0x72, 0x67, 0x69, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4f,
	0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x45, 0x0a, 0x11, 0x4e, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x22, 0x51, 0x0a, 0x1c, 0x44, 0x72, 0x61, 0x77, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x52, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x22, 0x57, 0x0a, 0x18, 0x44, 0x72, 0x61,
	0x77, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x73, 0x22, 0x39, 0x0a, 0x1b, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0xc0, 0x01,
	0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x54, 0x54,
	0x41, 0x43, 0x4b, 0x5f, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x55, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x56, 0x4f, 0x4c, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d,
	0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x41, 0x4b, 0x45,
	0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x41,
	0x4b, 0x45, 0x5f, 0x47, 0x4f, 0x4f, 0x44, 0x53, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45,
	0x54, 0x52, 0x45, 0x41, 0x54, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x55, 0x50, 0x50, 0x4c,
	0x59, 0x5f, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55,
	0x52, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x42, 0x49,
	0x4c, 0x49, 0x54, 0x59, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x52, 0x41, 0x57, 0x10, 0x0a,
	0x42, 0x84, 0x02, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x69,
	0x6e, 0x67, 0x42, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79,
	0x61, 0x6d, 0x61, 0x74, 0x6f, 0x30, 0x32, 0x31, 0x31, 0x2f, 0x62, 0x72, 0x61, 0x63, 0x68, 0x69,
	0x6f, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2f, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0xa2, 0x02, 0x03, 0x57, 0x50, 0x50, 0xaa, 0x02, 0x19, 0x57, 0x65, 0x62, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0xca, 0x02, 0x19, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x5c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5c, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e,
	0x67, 0xe2, 0x02, 0x25, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5c, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5c, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1b, 0x57, 0x65, 0x62, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x3a, 0x3a, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x3a, 0x3a,
	0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_websocket_payload_playing_proto_rawDescOnce sync.Once
	file_websocket_payload_playing_proto_rawDescData []byte
)

func file_websocket_payload_playing_proto_rawDescGZIP() []byte {
	file_websocket_payload_playing_proto_rawDescOnce.Do(func() {
		file_websocket_payload_playing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_websocket_payload_playing_proto_rawDesc), len(file_websocket_payload_playing_proto_rawDesc)))
	})
	return file_websocket_payload_playing_proto_rawDescData
}

var file_websocket_payload_playing_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_websocket_payload_playing_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_websocket_payload_playing_proto_goTypes = []any{
	(ActionType)(0),                         // 0: websocket.payload.playing.ActionType
	(*AttackMonsterPayload)(nil),            // 1: websocket.payload.playing.AttackMonsterPayload
	(*SummonMonsterPayload)(nil),            // 2: websocket.payload.playing.SummonMonsterPayload
	(*EvolutionMonsterPayload)(nil),         // 3: websocket.payload.playing.EvolutionMonsterPayload
	(*TakeSupportPayload)(nil),              // 4: websocket.payload.playing.TakeSupportPayload
	(*TakeGoodsPayload)(nil),                // 5: websocket.payload.playing.TakeGoodsPayload
	(*RetreatPayload)(nil),                  // 6: websocket.payload.playing.RetreatPayload
	(*SupplyEnergys)(nil),                   // 7: websocket.payload.playing.SupplyEnergys
	(*SupplyEnergyPayload)(nil),             // 8: websocket.payload.playing.SupplyEnergyPayload
	(*SurrenderPayload)(nil),                // 9: websocket.payload.playing.SurrenderPayload
	(*AbilityPayload)(nil),                  // 10: websocket.payload.playing.AbilityPayload
	(*DrawCardPayload)(nil),                 // 11: websocket.payload.playing.DrawCardPayload
	(*DrawCardIndividualPayload)(nil),       // 12: websocket.payload.playing.DrawCardIndividualPayload
	(*ConfirmActionPayload)(nil),            // 13: websocket.payload.playing.ConfirmActionPayload
	(*Action)(nil),                          // 14: websocket.payload.playing.Action
	(*CoinTossPayload)(nil),                 // 15: websocket.payload.playing.CoinTossPayload
	(*CoinTossEmptyPayload)(nil),            // 16: websocket.payload.playing.CoinTossEmptyPayload
	(*StartGamePayload)(nil),                // 17: websocket.payload.playing.StartGamePayload
	(*InitialPlacementCompletePayload)(nil), // 18: websocket.payload.playing.InitialPlacementCompletePayload
	(*TurnStartPayload)(nil),                // 19: websocket.payload.playing.TurnStartPayload
	(*TurnEndPayload)(nil),                  // 20: websocket.payload.playing.TurnEndPayload
	(*ConfirmEnergyResponsePayload)(nil),    // 21: websocket.payload.playing.ConfirmEnergyResponsePayload
	(*ConfirmEnergyRequestPayload)(nil),     // 22: websocket.payload.playing.ConfirmEnergyRequestPayload
	(*ConfirmTargetResponsePayload)(nil),    // 23: websocket.payload.playing.ConfirmTargetResponsePayload
	(*ConfirmTargetRequestPayload)(nil),     // 24: websocket.payload.playing.ConfirmTargetRequestPayload
	(*NextEnergyPayload)(nil),               // 25: websocket.payload.playing.NextEnergyPayload
	(*DrawEffectPayloadToRecipient)(nil),    // 26: websocket.payload.playing.DrawEffectPayloadToRecipient
	(*DrawEffectPayloadToActor)(nil),        // 27: websocket.payload.playing.DrawEffectPayloadToActor
	(*SelectBattlePositionPayload)(nil),     // 28: websocket.payload.playing.SelectBattlePositionPayload
	(*messages.Card)(nil),                   // 29: messages.card.Card
	(messages.Element)(0),                   // 30: messages.common.Element
	(*messages.Ability)(nil),                // 31: messages.ability.Ability
	(*emptypb.Empty)(nil),                   // 32: google.protobuf.Empty
	(*messages.Effect)(nil),                 // 33: messages.effect.Effect
	(*messages.EffectWithSecret)(nil),       // 34: messages.effect.EffectWithSecret
}
var file_websocket_payload_playing_proto_depIdxs = []int32{
	29, // 0: websocket.payload.playing.SummonMonsterPayload.card:type_name -> messages.card.Card
	29, // 1: websocket.payload.playing.EvolutionMonsterPayload.card:type_name -> messages.card.Card
	29, // 2: websocket.payload.playing.TakeSupportPayload.card:type_name -> messages.card.Card
	29, // 3: websocket.payload.playing.TakeGoodsPayload.card:type_name -> messages.card.Card
	29, // 4: websocket.payload.playing.RetreatPayload.card:type_name -> messages.card.Card
	30, // 5: websocket.payload.playing.SupplyEnergys.energies:type_name -> messages.common.Element
	7,  // 6: websocket.payload.playing.SupplyEnergyPayload.supplys:type_name -> websocket.payload.playing.SupplyEnergys
	31, // 7: websocket.payload.playing.AbilityPayload.ability:type_name -> messages.ability.Ability
	29, // 8: websocket.payload.playing.DrawCardIndividualPayload.cards:type_name -> messages.card.Card
	14, // 9: websocket.payload.playing.ConfirmActionPayload.actions:type_name -> websocket.payload.playing.Action
	0,  // 10: websocket.payload.playing.Action.type:type_name -> websocket.payload.playing.ActionType
	32, // 11: websocket.payload.playing.CoinTossEmptyPayload.empty:type_name -> google.protobuf.Empty
	32, // 12: websocket.payload.playing.StartGamePayload.empty:type_name -> google.protobuf.Empty
	32, // 13: websocket.payload.playing.InitialPlacementCompletePayload.empty:type_name -> google.protobuf.Empty
	29, // 14: websocket.payload.playing.TurnStartPayload.cards:type_name -> messages.card.Card
	31, // 15: websocket.payload.playing.TurnStartPayload.abilities:type_name -> messages.ability.Ability
	29, // 16: websocket.payload.playing.TurnEndPayload.cards:type_name -> messages.card.Card
	31, // 17: websocket.payload.playing.TurnEndPayload.abilities:type_name -> messages.ability.Ability
	29, // 18: websocket.payload.playing.ConfirmEnergyResponsePayload.card:type_name -> messages.card.Card
	30, // 19: websocket.payload.playing.ConfirmEnergyResponsePayload.energies:type_name -> messages.common.Element
	29, // 20: websocket.payload.playing.ConfirmEnergyRequestPayload.card:type_name -> messages.card.Card
	30, // 21: websocket.payload.playing.ConfirmEnergyRequestPayload.energies:type_name -> messages.common.Element
	30, // 22: websocket.payload.playing.NextEnergyPayload.energy:type_name -> messages.common.Element
	33, // 23: websocket.payload.playing.DrawEffectPayloadToRecipient.effects:type_name -> messages.effect.Effect
	34, // 24: websocket.payload.playing.DrawEffectPayloadToActor.effects:type_name -> messages.effect.EffectWithSecret
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_websocket_payload_playing_proto_init() }
func file_websocket_payload_playing_proto_init() {
	if File_websocket_payload_playing_proto != nil {
		return
	}
	file_websocket_payload_playing_proto_msgTypes[13].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_websocket_payload_playing_proto_rawDesc), len(file_websocket_payload_playing_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_websocket_payload_playing_proto_goTypes,
		DependencyIndexes: file_websocket_payload_playing_proto_depIdxs,
		EnumInfos:         file_websocket_payload_playing_proto_enumTypes,
		MessageInfos:      file_websocket_payload_playing_proto_msgTypes,
	}.Build()
	File_websocket_payload_playing_proto = out.File
	file_websocket_payload_playing_proto_goTypes = nil
	file_websocket_payload_playing_proto_depIdxs = nil
}
