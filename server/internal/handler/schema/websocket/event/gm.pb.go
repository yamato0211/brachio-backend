// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: websocket/event/gm.proto

package event

import (
	payload "github.com/yamato0211/brachio-backend/internal/handler/schema/websocket/payload"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// //
// ルーム入室イベント
// //
type EnterRoomEventToServer struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Payload       *payload.EnterRoomEventPayload `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	DeckId        string                         `protobuf:"bytes,2,opt,name=deckId,proto3" json:"deckId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnterRoomEventToServer) Reset() {
	*x = EnterRoomEventToServer{}
	mi := &file_websocket_event_gm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnterRoomEventToServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterRoomEventToServer) ProtoMessage() {}

func (x *EnterRoomEventToServer) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_event_gm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterRoomEventToServer.ProtoReflect.Descriptor instead.
func (*EnterRoomEventToServer) Descriptor() ([]byte, []int) {
	return file_websocket_event_gm_proto_rawDescGZIP(), []int{0}
}

func (x *EnterRoomEventToServer) GetPayload() *payload.EnterRoomEventPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *EnterRoomEventToServer) GetDeckId() string {
	if x != nil {
		return x.DeckId
	}
	return ""
}

// //
// マッチング完了イベント
// //
type MatchingCompleteEventToActor struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Payload       *payload.MatchingCompleteEventPayload `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchingCompleteEventToActor) Reset() {
	*x = MatchingCompleteEventToActor{}
	mi := &file_websocket_event_gm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchingCompleteEventToActor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingCompleteEventToActor) ProtoMessage() {}

func (x *MatchingCompleteEventToActor) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_event_gm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingCompleteEventToActor.ProtoReflect.Descriptor instead.
func (*MatchingCompleteEventToActor) Descriptor() ([]byte, []int) {
	return file_websocket_event_gm_proto_rawDescGZIP(), []int{1}
}

func (x *MatchingCompleteEventToActor) GetPayload() *payload.MatchingCompleteEventPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type MatchingCompleteEventToRecipient struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Payload       *payload.MatchingCompleteEventPayload `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchingCompleteEventToRecipient) Reset() {
	*x = MatchingCompleteEventToRecipient{}
	mi := &file_websocket_event_gm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchingCompleteEventToRecipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingCompleteEventToRecipient) ProtoMessage() {}

func (x *MatchingCompleteEventToRecipient) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_event_gm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingCompleteEventToRecipient.ProtoReflect.Descriptor instead.
func (*MatchingCompleteEventToRecipient) Descriptor() ([]byte, []int) {
	return file_websocket_event_gm_proto_rawDescGZIP(), []int{2}
}

func (x *MatchingCompleteEventToRecipient) GetPayload() *payload.MatchingCompleteEventPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// //
// 先攻後攻決定イベント
// //
type DecideOrderEventToActor struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Payload       *payload.DecideOrderEventPayload `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecideOrderEventToActor) Reset() {
	*x = DecideOrderEventToActor{}
	mi := &file_websocket_event_gm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecideOrderEventToActor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecideOrderEventToActor) ProtoMessage() {}

func (x *DecideOrderEventToActor) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_event_gm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecideOrderEventToActor.ProtoReflect.Descriptor instead.
func (*DecideOrderEventToActor) Descriptor() ([]byte, []int) {
	return file_websocket_event_gm_proto_rawDescGZIP(), []int{3}
}

func (x *DecideOrderEventToActor) GetPayload() *payload.DecideOrderEventPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type DecideOrderEventToRecipient struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Payload       *payload.DecideOrderEventPayload `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecideOrderEventToRecipient) Reset() {
	*x = DecideOrderEventToRecipient{}
	mi := &file_websocket_event_gm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecideOrderEventToRecipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecideOrderEventToRecipient) ProtoMessage() {}

func (x *DecideOrderEventToRecipient) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_event_gm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecideOrderEventToRecipient.ProtoReflect.Descriptor instead.
func (*DecideOrderEventToRecipient) Descriptor() ([]byte, []int) {
	return file_websocket_event_gm_proto_rawDescGZIP(), []int{4}
}

func (x *DecideOrderEventToRecipient) GetPayload() *payload.DecideOrderEventPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_websocket_event_gm_proto protoreflect.FileDescriptor

var file_websocket_event_gm_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2f, 0x67, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x77, 0x65, 0x62, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x6d, 0x1a, 0x1a,
	0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x2f, 0x67, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a, 0x16, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x67, 0x6d, 0x2e, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x63,
	0x6b, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x1c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x67, 0x6d, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x70, 0x0a, 0x20, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x67, 0x6d, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x62, 0x0a, 0x17, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x47,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x67, 0x6d, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x66, 0x0a, 0x1b, 0x44, 0x65, 0x63, 0x69, 0x64,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x67, 0x6d, 0x2e, 0x44,
	0x65, 0x63, 0x69, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42,
	0xda, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x6d, 0x42, 0x07, 0x47, 0x6d, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x79, 0x61, 0x6d, 0x61, 0x74, 0x6f, 0x30, 0x32, 0x31, 0x31, 0x2f, 0x62, 0x72, 0x61,
	0x63, 0x68, 0x69, 0x6f, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2f, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0xa2, 0x02, 0x03, 0x57, 0x45, 0x47, 0xaa, 0x02, 0x12, 0x57, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x6d, 0xca,
	0x02, 0x12, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x5c, 0x47, 0x6d, 0xe2, 0x02, 0x1e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5c, 0x47, 0x6d, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x3a, 0x3a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x47, 0x6d, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_websocket_event_gm_proto_rawDescOnce sync.Once
	file_websocket_event_gm_proto_rawDescData []byte
)

func file_websocket_event_gm_proto_rawDescGZIP() []byte {
	file_websocket_event_gm_proto_rawDescOnce.Do(func() {
		file_websocket_event_gm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_websocket_event_gm_proto_rawDesc), len(file_websocket_event_gm_proto_rawDesc)))
	})
	return file_websocket_event_gm_proto_rawDescData
}

var file_websocket_event_gm_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_websocket_event_gm_proto_goTypes = []any{
	(*EnterRoomEventToServer)(nil),               // 0: websocket.event.gm.EnterRoomEventToServer
	(*MatchingCompleteEventToActor)(nil),         // 1: websocket.event.gm.MatchingCompleteEventToActor
	(*MatchingCompleteEventToRecipient)(nil),     // 2: websocket.event.gm.MatchingCompleteEventToRecipient
	(*DecideOrderEventToActor)(nil),              // 3: websocket.event.gm.DecideOrderEventToActor
	(*DecideOrderEventToRecipient)(nil),          // 4: websocket.event.gm.DecideOrderEventToRecipient
	(*payload.EnterRoomEventPayload)(nil),        // 5: websocket.payload.gm.EnterRoomEventPayload
	(*payload.MatchingCompleteEventPayload)(nil), // 6: websocket.payload.gm.MatchingCompleteEventPayload
	(*payload.DecideOrderEventPayload)(nil),      // 7: websocket.payload.gm.DecideOrderEventPayload
}
var file_websocket_event_gm_proto_depIdxs = []int32{
	5, // 0: websocket.event.gm.EnterRoomEventToServer.payload:type_name -> websocket.payload.gm.EnterRoomEventPayload
	6, // 1: websocket.event.gm.MatchingCompleteEventToActor.payload:type_name -> websocket.payload.gm.MatchingCompleteEventPayload
	6, // 2: websocket.event.gm.MatchingCompleteEventToRecipient.payload:type_name -> websocket.payload.gm.MatchingCompleteEventPayload
	7, // 3: websocket.event.gm.DecideOrderEventToActor.payload:type_name -> websocket.payload.gm.DecideOrderEventPayload
	7, // 4: websocket.event.gm.DecideOrderEventToRecipient.payload:type_name -> websocket.payload.gm.DecideOrderEventPayload
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_websocket_event_gm_proto_init() }
func file_websocket_event_gm_proto_init() {
	if File_websocket_event_gm_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_websocket_event_gm_proto_rawDesc), len(file_websocket_event_gm_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_websocket_event_gm_proto_goTypes,
		DependencyIndexes: file_websocket_event_gm_proto_depIdxs,
		MessageInfos:      file_websocket_event_gm_proto_msgTypes,
	}.Build()
	File_websocket_event_gm_proto = out.File
	file_websocket_event_gm_proto_goTypes = nil
	file_websocket_event_gm_proto_depIdxs = nil
}
