// @generated by protoc-gen-es v2.0.0
// @generated from file messages/deck.proto (package messages.deck, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Card } from "./card_pb";
import type { Element } from "./common_pb";

/**
 * Describes the file messages/deck.proto.
 */
export declare const file_messages_deck: GenFile;

/**
 * デッキ基本情報（id が必須の場合）
 *
 * @generated from message messages.deck.DeckBaseWithId
 */
export declare type DeckBaseWithId = Message<"messages.deck.DeckBaseWithId"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: messages.card.Card thumbnail_card = 3;
   */
  thumbnailCard?: Card;

  /**
   * @generated from field: messages.common.Element color = 4;
   */
  color: Element;
};

/**
 * Describes the message messages.deck.DeckBaseWithId.
 * Use `create(DeckBaseWithIdSchema)` to create a new message.
 */
export declare const DeckBaseWithIdSchema: GenMessage<DeckBaseWithId>;

/**
 * デッキ（deckBase に加え、カードリストとエネルギー属性を持つ）
 *
 * @generated from message messages.deck.Deck
 */
export declare type Deck = Message<"messages.deck.Deck"> & {
  /**
   * デッキID（作成時は空の場合もあり）
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: messages.card.Card thumbnail_card = 3;
   */
  thumbnailCard?: Card;

  /**
   * @generated from field: messages.common.Element color = 4;
   */
  color: Element;

  /**
   * カードリスト
   *
   * @generated from field: repeated messages.card.Card cards = 5;
   */
  cards: Card[];

  /**
   * エネルギーの属性リスト
   *
   * @generated from field: repeated messages.common.Element energies = 6;
   */
  energies: Element[];
};

/**
 * Describes the message messages.deck.Deck.
 * Use `create(DeckSchema)` to create a new message.
 */
export declare const DeckSchema: GenMessage<Deck>;

/**
 * デッキの基本情報（id はオプショナルの場合もある）
 *
 * @generated from message messages.deck.DeckBase
 */
export declare type DeckBase = Message<"messages.deck.DeckBase"> & {
  /**
   * デッキID（readOnly）
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * デッキ名
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * サムネイルカード
   *
   * @generated from field: messages.card.Card thumbnail_card = 3;
   */
  thumbnailCard?: Card;

  /**
   * 色（Element）
   *
   * @generated from field: messages.common.Element color = 4;
   */
  color: Element;
};

/**
 * Describes the message messages.deck.DeckBase.
 * Use `create(DeckBaseSchema)` to create a new message.
 */
export declare const DeckBaseSchema: GenMessage<DeckBase>;

/**
 * デッキ（id 必須バージョン）
 *
 * @generated from message messages.deck.DeckWithId
 */
export declare type DeckWithId = Message<"messages.deck.DeckWithId"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: messages.card.Card thumbnail_card = 3;
   */
  thumbnailCard?: Card;

  /**
   * @generated from field: messages.common.Element color = 4;
   */
  color: Element;

  /**
   * @generated from field: repeated messages.card.Card cards = 5;
   */
  cards: Card[];

  /**
   * @generated from field: repeated messages.common.Element energies = 6;
   */
  energies: Element[];
};

/**
 * Describes the message messages.deck.DeckWithId.
 * Use `create(DeckWithIdSchema)` to create a new message.
 */
export declare const DeckWithIdSchema: GenMessage<DeckWithId>;

