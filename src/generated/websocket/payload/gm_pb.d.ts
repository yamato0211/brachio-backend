// @generated by protoc-gen-es v2.0.0
// @generated from file websocket/payload/gm.proto (package websocket.payload.gm, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file websocket/payload/gm.proto.
 */
export declare const file_websocket_payload_gm: GenFile;

/**
 * ルーム作成イベント
 *
 * @generated from message websocket.payload.gm.CreateRoomEventPayload
 */
export declare type CreateRoomEventPayload = Message<"websocket.payload.gm.CreateRoomEventPayload"> & {
  /**
   * ルームの合言葉
   *
   * @generated from field: string password = 1;
   */
  password: string;
};

/**
 * Describes the message websocket.payload.gm.CreateRoomEventPayload.
 * Use `create(CreateRoomEventPayloadSchema)` to create a new message.
 */
export declare const CreateRoomEventPayloadSchema: GenMessage<CreateRoomEventPayload>;

/**
 * ルーム入室イベント
 *
 * @generated from message websocket.payload.gm.EnterRoomEventPayload
 */
export declare type EnterRoomEventPayload = Message<"websocket.payload.gm.EnterRoomEventPayload"> & {
  /**
   * ルームの合言葉
   *
   * @generated from field: string password = 1;
   */
  password: string;

  /**
   * @generated from field: string deckId = 2;
   */
  deckId: string;
};

/**
 * Describes the message websocket.payload.gm.EnterRoomEventPayload.
 * Use `create(EnterRoomEventPayloadSchema)` to create a new message.
 */
export declare const EnterRoomEventPayloadSchema: GenMessage<EnterRoomEventPayload>;

/**
 * マッチング完了イベント
 *
 * @generated from message websocket.payload.gm.MatchingCompleteEventPayload
 */
export declare type MatchingCompleteEventPayload = Message<"websocket.payload.gm.MatchingCompleteEventPayload"> & {
  /**
   * @generated from field: string opponentId = 1;
   */
  opponentId: string;

  /**
   * @generated from field: string battleId = 2;
   */
  battleId: string;
};

/**
 * Describes the message websocket.payload.gm.MatchingCompleteEventPayload.
 * Use `create(MatchingCompleteEventPayloadSchema)` to create a new message.
 */
export declare const MatchingCompleteEventPayloadSchema: GenMessage<MatchingCompleteEventPayload>;

/**
 * 先攻後攻決定イベント
 *
 * @generated from message websocket.payload.gm.DecideOrderEventPayload
 */
export declare type DecideOrderEventPayload = Message<"websocket.payload.gm.DecideOrderEventPayload"> & {
  /**
   * 先攻のユーザーID
   *
   * @generated from field: string firstUserId = 1;
   */
  firstUserId: string;

  /**
   * 後攻のユーザーID
   *
   * @generated from field: string secondUserId = 2;
   */
  secondUserId: string;
};

/**
 * Describes the message websocket.payload.gm.DecideOrderEventPayload.
 * Use `create(DecideOrderEventPayloadSchema)` to create a new message.
 */
export declare const DecideOrderEventPayloadSchema: GenMessage<DecideOrderEventPayload>;

